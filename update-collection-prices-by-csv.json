{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \{\
  "name": "Update Collection Prices by CSV",\
  "nodes": [\
    \{\
      "parameters": \{\},\
      "name": "Local File Trigger",\
      "type": "n8n-nodes-base.localFileTrigger",\
      "typeVersion": 1,\
      "position": [250, 300]\
    \},\
    \{\
      "parameters": \{\
        "options": \{\}\
      \},\
      "name": "Read Binary File",\
      "type": "n8n-nodes-base.readBinaryFile",\
      "typeVersion": 1,\
      "position": [450, 300]\
    \},\
    \{\
      "parameters": \{\
        "options": \{\
          "headerRow": true,\
          "delimiter": ","\
        \}\
      \},\
      "name": "Parse CSV",\
      "type": "n8n-nodes-base.spreadsheetFile",\
      "typeVersion": 1,\
      "position": [650, 300]\
    \},\
    \{\
      "parameters": \{\
        "operation": "getAll",\
        "collectionId": "YOUR_COLLECTION_ID_HERE",\
        "returnAll": true\
      \},\
      "name": "Get Collection Products",\
      "type": "n8n-nodes-base.shopify",\
      "typeVersion": 2,\
      "position": [850, 300],\
      "credentials": \{\
        "shopifyApi": \{\
          "id": "shopify-admin",\
          "name": "Shopify Admin API"\
        \}\
      \}\
    \},\
    \{\
      "parameters": \{\
        "jsCode": "const map = \{\};\\nitems[0].json.forEach(r => map[r.sku.trim().toLowerCase()] = r.price);\\nreturn items.map(p => (\{ json: \{ ...p.json, skuMap: map \} \}));"\
      \},\
      "name": "Build SKU Map",\
      "type": "n8n-nodes-base.function",\
      "typeVersion": 1,\
      "position": [1050, 300]\
    \},\
    \{\
      "parameters": \{\
        "jsCode": "const map = items[0].json.skuMap;\\nconst prods = items[0].json.products || items;\\nconst updates = [];\\nprods.forEach(p => \{\\n  p.variants.forEach(v => \{\\n    const sku = (v.sku || '').trim().toLowerCase();\\n    if (sku in map) \{\\n      updates.push(\{ json: \{ id: v.id, price: map[sku] \} \});\\n    \}\\n  \});\\n\});\\nreturn updates;"\
      \},\
      "name": "Prepare Updates",\
      "type": "n8n-nodes-base.function",\
      "typeVersion": 1,\
      "position": [1250, 300]\
    \},\
    \{\
      "parameters": \{\
        "operation": "update",\
        "updateFields": \{\
          "price": "=\{\{ $json.price \}\}"\
        \}\
      \},\
      "name": "Update Variant",\
      "type": "n8n-nodes-base.shopify",\
      "typeVersion": 2,\
      "position": [1450, 300],\
      "credentials": \{\
        "shopifyApi": \{\
          "id": "shopify-admin",\
          "name": "Shopify Admin API"\
        \}\
      \}\
    \}\
  ],\
  "connections": \{\
    "Local File Trigger": \{ "main": [ [ \{ "node": "Read Binary File", "type": "main", "index": 0 \} ] ] \},\
    "Read Binary File": \{ "main": [ [ \{ "node": "Parse CSV", "type": "main", "index": 0 \} ] ] \},\
    "Parse CSV": \{ "main": [ [ \{ "node": "Get Collection Products", "type": "main", "index": 0 \} ] ] \},\
    "Get Collection Products": \{ "main": [ [ \{ "node": "Build SKU Map", "type": "main", "index": 0 \} ] ] \},\
    "Build SKU Map": \{ "main": [ [ \{ "node": "Prepare Updates", "type": "main", "index": 0 \} ] ] \},\
    "Prepare Updates": \{ "main": [ [ \{ "node": "Update Variant", "type": "main", "index": 0 \} ] ] \}\
  \},\
  "active": false,\
  "settings": \{ "executionOrder": "v1" \},\
  "meta": \{ "templateCredsSetup": true \}\
\}}